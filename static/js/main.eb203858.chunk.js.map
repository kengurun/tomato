{"version":3,"sources":["COMPONENTS/TIMER/timer.module.css","ASSETS/IMAGES/tomato.gif","COMPONENTS/TIMER/timerWithHooks.jsx","REDUX/timerReducer.js","COMPONENTS/TIMER/timerContainer.jsx","COMPONENTS/TIMER/msToTimeString.js","COMPONENTS/HEADER/header.jsx","COMPONENTS/HEADER/headerContainer.jsx","COMPONENTS/DRAWER/Drawer.jsx","App.js","serviceWorker.js","REDUX/authReducer.js","REDUX/reduxStore.js","index.js"],"names":["module","exports","TimerWithHooks","props","classes","makeStyles","theme","root","flexGrow","content","display","height","fixedHeight","width","paper","padding","spacing","container","paddingTop","paddingBottom","useStyles","clsx","useState","timerDuration","setTimerDuration","className","Grid","align","justify","alignContent","direction","item","Paper","s","input","type","value","onChange","e","target","min","max","isStarted","Button","color","variant","onClick","stop","startTimer","result","id","timeLeft","showTomato","tomato","src","initialState","timerId","setTimeLeft","time","setTimerStatus","setShowTomato","show","stopTimer","dispatch","clearInterval","console","log","timerReducer","state","action","connected","connect","timerPage","minutes","count","setInterval","timeString","duration","seconds","parseInt","hours","msToTimeString","menuButton","marginRight","title","Header","AppBar","position","Toolbar","IconButton","edge","handleDrawerOpen","Typography","isAuth","auth","list","fullList","TemporaryDrawer","anchor","Fragment","key","Drawer","open","drawerState","onClose","handleDrawerClose","role","onKeyDown","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","App","prefersDarkMode","useMediaQuery","React","useMemo","createMuiTheme","palette","setDrawerState","ThemeProvider","CssBaseline","Boolean","window","location","hostname","match","authReducer","reducers","combineReducers","store","createStore","applyMiddleware","thunkMiddleWare","stor","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eb203858.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"timer_button__3MnBY\",\"input\":\"timer_input__1vKNZ\",\"result\":\"timer_result__2u0jg\"};","module.exports = __webpack_public_path__ + \"static/media/tomato.a0296338.gif\";","import React, {useState, useEffect} from 'react';\nimport s from './timer.module.css';\nimport tomato from '../../ASSETS/IMAGES/tomato.gif';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport {makeStyles} from '@material-ui/core/styles';\nimport clsx from 'clsx';\n\nlet TimerWithHooks = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        content: {\n            display: 'flex',\n            height: '100%'\n        },\n        fixedHeight: {\n            height: 240,\n            width: 240\n        },\n        paper: {\n            padding: theme.spacing(2),\n            // textAlign: 'center',\n            // display: 'flex',\n            // flexDirection: 'column',\n            // alignItems: 'center',\n            // justifyContent: 'space-evenly'\n\n        },\n        container: {\n            paddingTop: theme.spacing(4),\n            paddingBottom: theme.spacing(4),\n        }\n    }));\n\n    const classes = useStyles();\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    let [timerDuration, setTimerDuration] = useState(1);\n    // useEffect(() => {\n    //     console.log('useEffect');\n    // }, [timerDuration]);\n    let onChange = (e) => {\n        setTimerDuration(e.target.value);\n    };\n    let startTimer = () => {\n        props.startTimer(timerDuration);\n    };\n    return (\n        <div className={classes.root}>\n            <div className={classes.content}>\n                <Grid container\n                      spacing={0}\n                      align=\"center\" // выравнивает дочерние элементы внутри элемента сетки\n                      justify=\"center\" // выравнивает вдоль главной оси (column) за счет распределения своб места\n                      alignContent=\"center\" // выравнивает вдолб поперечной оси (горизонтально)\n                      direction=\"column\"\n                >\n                    <Grid item >\n                        <Paper className={classes.paper}>\n                            <Grid container direction=\"column\" spacing={3}>\n                                <Grid item>\n                                    <div>\n                                        Количество минут:\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    <div className={s.input}>\n                                        <input type=\"number\"\n                                               value={timerDuration}\n                                               onChange={onChange} min='0.1' max='15'/>\n                                    </div>\n                                </Grid>\n                                <Grid item>\n                                    {\n                                        props.isStarted\n                                            ?\n                                            <Button color=\"secondary\" variant=\"contained\"\n                                                    onClick={props.stop}>Stop</Button>\n                                            :\n                                            <Button color=\"primary\" variant=\"contained\"\n                                                    onClick={startTimer}>Start</Button>\n                                    }\n                                </Grid>\n                                <Grid item>\n                                    <div className={s.result}>Осталось времени: <span\n                                        id='result'>{props.timeLeft}</span>\n                                    </div>\n                                </Grid>\n                                {props.showTomato &&\n                                <Grid item>\n                                    <div className={s.tomato}>\n                                        <img src={tomato}/>\n                                    </div>\n                                </Grid>\n                                }\n                            </Grid>\n                        </Paper>\n                    </Grid>\n                </Grid>\n            </div>\n        </div>\n    )\n};\n\nexport default TimerWithHooks;","let SET_TIMER_STATUS = 'SET_TIMER_STATUS';\nlet SET_TIME_LEFT = 'SET_TIME_LEFT';\nlet SET_SHOW_TOMATO = 'SET_SHOW_TOMATO';\nlet SET_TIMER_ID = 'SET_TIMER_ID';\n\nlet initialState = {\n    isStarted: false,\n    timeLeft: 0,\n    timerId: null,\n    showTomato: false\n};\n\nlet timerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_TIME_LEFT: {\n            return {\n                ...state,\n                timeLeft: action.time\n            }\n        }\n        case SET_SHOW_TOMATO: {\n            return {\n                ...state,\n                showTomato: action.show\n            }\n        }\n        case SET_TIMER_STATUS:\n            return {\n                ...state,\n                isStarted: action.isStarted\n            };\n        case SET_TIMER_ID:\n            return {\n                ...state,\n                timerId: action.id\n            };\n\n        default:\n            return state;\n    }\n};\n\n\nexport const setTimeLeft = (time) => ({type: SET_TIME_LEFT, time: time});\nexport const setTimerStatus = (isStarted) => ({type: SET_TIMER_STATUS, isStarted: isStarted});\nexport const setTimerId = (id) => ({type: SET_TIMER_ID, id: id});\nexport const setShowTomato = (show) => ({type: SET_SHOW_TOMATO, show: show});\n\nexport const startTimer = (minutes) => {\n    return (dispatch) => {\n        let count = minutes * 60; // переводим минуты в секунды\n        dispatch(setShowTomato(false));\n        dispatch(setTimerStatus(true));\n        dispatch(setTimeLeft(count));\n        console.log('Timer started from ' + count + ' seconds');\n\n        let timerId = setInterval(() => {\n            count = count - 1;\n            if (count <= 0) {\n                dispatch(stopTimer(timerId));\n                dispatch(setShowTomato(true));\n            } else {\n                dispatch(setTimeLeft(count));\n            }\n            console.log(count);\n        }, 1000);\n        dispatch(setTimerId(timerId));\n        console.log('TimerID: ' + timerId);\n    };\n};\n\nexport const stopTimer = (timerId) => {\n    return (dispatch) => {\n        clearInterval(timerId);\n        dispatch(setTimerStatus(false));\n        dispatch(setTimeLeft(0));\n        console.log('Timer stopped.');\n    }\n};\n\nexport default timerReducer;\n\n","import React from 'react';\nimport TimerWithHooks from \"./timerWithHooks\";\nimport {connect} from 'react-redux';\nimport {startTimer, stopTimer} from \"../../REDUX/timerReducer\";\nimport {msToTimeString} from \"./msToTimeString\";\n\n\nconst TimerContainer = (props) => {\n    const stop = () => {\n        props.stopTimer(props.timerId);\n    };\n    let timeLeftMilisec = props.timeLeft * 1000;\n    let timeString = msToTimeString(timeLeftMilisec);\n    return <TimerWithHooks\n        isStarted={props.isStarted}\n        timeLeft={timeString}\n        timerDuration={props.timerDuration}\n        startTimer={props.startTimer}\n        showTomato={props.showTomato}\n        stop={stop}\n    />\n};\n\nlet mapStateToProps = (state) => {\n    return {\n        isStarted: state.timerPage.isStarted,\n        timeLeft: state.timerPage.timeLeft,\n        timerId: state.timerPage.timerId,\n        showTomato: state.timerPage.showTomato\n    }\n};\n\nlet connected = connect(mapStateToProps, {\n        startTimer,\n        stopTimer\n    }\n)(TimerContainer);\n\nexport default connected;","export const msToTimeString = (duration) => {\n    // let milliseconds = parseInt((duration % 1000) / 100)\n       let seconds = parseInt((duration / 1000) % 60),\n        minutes = parseInt((duration / (1000 * 60)) % 60),\n        hours = parseInt((duration / (1000 * 60 * 60)) % 24);\n\n    hours = (hours < 10) ? \"0\" + hours : hours;\n    minutes = (minutes < 10) ? \"0\" + minutes : minutes;\n    seconds = (seconds < 10) ? \"0\" + seconds : seconds;\n\n    return hours + \":\" + minutes + \":\" + seconds;\n};","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    }\n}));\n\nconst Header = (props) => {\n    const classes = useStyles();\n    // debugger\n    return (\n        <AppBar position=\"static\">\n            <Toolbar>\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\"\n                            onClick={() => props.handleDrawerOpen()}>\n                    <MenuIcon/>\n                </IconButton>\n                <Typography variant=\"h6\" className={classes.title}>\n                    TomatoTimer\n                </Typography>\n                {props.isAuth\n                    ? <Button color=\"inherit\">Logout</Button>\n                    : <Button color=\"inherit\">Login</Button>\n                }\n            </Toolbar>\n        </AppBar>\n    )\n};\n\nexport default Header;","import React from 'react';\nimport Header from \"./header\";\nimport {connect} from 'react-redux';\n\nconst HeaderContainer = (props) => {\n    return (\n        <div>\n            <Header\n                isAuth={props.isAuth}\n                handleDrawerOpen={props.handleDrawerOpen}\n            />\n        </div>\n    )\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.isAuth\n    }\n};\n\nexport default connect(mapStateToProps, {\n\n})(HeaderContainer);","import React from 'react';\nimport clsx from 'clsx';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\n\nconst useStyles = makeStyles({\n    list: {\n        width: 250,\n    },\n    fullList: {\n        width: 'auto',\n    },\n});\n\nexport default function TemporaryDrawer(props) {\n    const classes = useStyles();\n\n\n    // const toggleDrawer = (open) => (event) => {\n    //     if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n    //         return;\n    //     }\n    //     setState(open);\n    // };\n\n    const list = (anchor) => (\n        <div\n            className={clsx(classes.list, {\n                [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n            })}\n            role=\"presentation\"\n            onClick={props.handleDrawerClose}\n            onKeyDown={props.handleDrawerClose}\n        >\n            <List>\n                {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n            <Divider />\n            <List>\n                {['All mail', 'Trash', 'Spam'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                ))}\n            </List>\n        </div>\n    );\n\n    return (\n        <div>\n                <React.Fragment key={'left'}>\n                    <Drawer anchor={'left'} open={props.drawerState} onClose={props.handleDrawerClose}>\n                        {list('left')}\n                    </Drawer>\n                </React.Fragment>\n        </div>\n    );\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport TimerContainer from '../src/COMPONENTS/TIMER/timerContainer';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HeaderContainer from \"./COMPONENTS/HEADER/headerContainer\";\nimport {createMuiTheme, ThemeProvider} from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport TemporaryDrawer from \"./COMPONENTS/DRAWER/Drawer\";\n\n\nfunction App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const theme = React.useMemo(() =>\n            createMuiTheme({\n                palette: {\n                    type: prefersDarkMode ? 'dark' : 'light',\n                },\n            }),\n        [prefersDarkMode],\n    );\n    const [drawerState, setDrawerState] = React.useState(\n        false\n    );\n    const handleDrawerOpen = () => {\n        setDrawerState(true)\n    };\n    const handleDrawerClose = () => {\n        setDrawerState(false)\n    };\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className=\"App\">\n                    <CssBaseline/>\n                    <HeaderContainer handleDrawerOpen={handleDrawerOpen}/>\n                    <TemporaryDrawer\n                        handleDrawerClose={handleDrawerClose}\n                        drawerState={drawerState}\n                    />\n                    <TimerContainer/>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let SET_IS_AUTH = 'SET_IS_AUTH';\n\n\nlet initialState = {\n    isAuth: false\n};\n\nlet authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_IS_AUTH: {\n            return {\n                ...state,\n                isAuth: action.isAuth\n            }\n        }\n        default:\n            return state;\n    }\n};\n\n\nexport const setIsAuth = (isAuth) => ({type: SET_IS_AUTH, isAuth: isAuth});\n\n\n\nexport default authReducer;\n\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport timerReducer from \"./timerReducer\";\nimport thunkMiddleWare from 'redux-thunk';\nimport authReducer from \"./authReducer\";\n\nlet reducers = combineReducers({\n        timerPage: timerReducer,\n        auth: authReducer\n    }\n);\nlet store = createStore(reducers, applyMiddleware(thunkMiddleWare));\nwindow.stor = store;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./REDUX/reduxStore\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}